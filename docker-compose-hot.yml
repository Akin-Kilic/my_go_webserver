version: '3.8'

services:
  my_go_webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: my_go_webserver
    container_name: my_go_webserver
    ports:
      - "6001:6001"
    volumes:
      - .:/app
      - ./config.docker.yaml:/root/config.yaml
      - /var/lib/docker
    depends_on:
      my_go_webserver_db:
        condition: service_healthy
    networks:
      - my_go_webserver

  my_go_webserver_db:
    image: postgres:latest
    container_name: my_go_webserver_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS}
    ports:
      - "5423:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - my_go_webserver_db:/var/lib/postgresql/data
    networks:
      - my_go_webserver

volumes:
  my_go_webserver_db:

networks:
  my_go_webserver:
    name: my_go_webserver_network
    driver: bridge
